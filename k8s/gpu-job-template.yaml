apiVersion: batch/v1
kind: Job
metadata:
  name: imagepod-gpu-job-{job_id}
  namespace: imagepod
  labels:
    app: imagepod-gpu-job
    job-id: "{job_id}"
    user-id: "{user_id}"
spec:
  template:
    metadata:
      labels:
        app: imagepod-gpu-job
        job-id: "{job_id}"
    spec:
      # Only run on nodes with GPUs
      nodeSelector:
        accelerator: nvidia-tesla-gpu
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      containers:
      - name: gpu-job
        image: "{docker_image}:{docker_tag}"
        imagePullPolicy: Always
        env:
        - name: JOB_ID
          value: "{job_id}"
        - name: USER_ID
          value: "{user_id}"
        - name: API_ENDPOINT
          value: "http://imagepod-api.imagepod.svc.cluster.local:8000"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            nvidia.com/gpu: 1
            memory: "{memory_required}Mi"
            cpu: "{cpu_cores_required}"
          limits:
            nvidia.com/gpu: 1
            memory: "{memory_required}Mi"
            cpu: "{cpu_cores_required}"
        ports:
        - containerPort: 8000
          name: http
        volumeMounts:
        - name: job-data
          mountPath: /data
        - name: output-data
          mountPath: /output
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: job-data
        configMap:
          name: job-data-{job_id}
      - name: output-data
        emptyDir: {}
      restartPolicy: Never
  backoffLimit: 3
  activeDeadlineSeconds: 3600  # 1 hour timeout
